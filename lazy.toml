[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'zchee/deoplete-clang'
hook_source = '''
  let g:deoplete#sources#clang#libclang_path = '/usr/lib/llvm-3.8/lib/libclang-3.8.so.1'
  let g:deoplete#sources#clang#clang_header = '/usr/lib/clang'
'''
on_ft = ['c', 'cpp', 'cmake']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_source = ['deoplete.nvim']
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'w0rp/ale'
on_ft = ['c', 'cpp', 'python', 'java']
hook_source = '''
  let g:ale_linters = {
      \ 'cpp' : ['gcc'],
      \ 'python' : ['flake8'],
      \}
'''
